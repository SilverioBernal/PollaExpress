@model Orkidea.PollaExpress.WebFront.Models.VmCustomer

@{
    ViewBag.Title = "CreateCustomer";
}

<h2>Crear Cliente</h2>

@using (Html.BeginForm("CreateCustomer", "Home", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    <h2>Sistema de gestión - Creación de Hallazgos</h2>

    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <div class="row">
        <div class="col-md-12">
            <div class="row">
                <div class="form-group">
                    <div class="col-md-4">
                        @Html.LabelFor(model => model.id, "id", new { @for = "id", @class = "control-label" })
                        @Html.TextBoxFor(model => model.id, new { @class = "form-control", style = "max-width:100%" })
                        @Html.ValidationMessageFor(model => model.id, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-md-4">
                        @Html.LabelFor(model => model.nombre, "Nombre", new { @for = "nombre", @class = "control-label" })
                        @Html.TextBoxFor(model => model.nombre, new { @class = "form-control", style = "max-width:100%" })
                        @Html.ValidationMessageFor(model => model.nombre, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-md-4">
                        @Html.LabelFor(model => model.email, "Email", new { @for = "email", @class = "control-label" })
                        @Html.TextBoxFor(model => model.email, new { @class = "form-control", style = "max-width:100%" })
                        @Html.ValidationMessageFor(model => model.email, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="form-group">
                    <div class="col-md-4">
                        <label>@Html.CheckBoxFor(model => model.mostrarTodo) Mostrar todos los juegos</label>                                                
                    </div>
                    <div class="col-md-4">
                        @Html.LabelFor(model => model.ganadoresPartido, "No Ganadores por partido", new { @for = "ganadoresPartido", @class = "control-label" })
                        @Html.TextBoxFor(model => model.ganadoresPartido, new { @class = "form-control", style = "max-width:100%" })
                        @Html.ValidationMessageFor(model => model.ganadoresPartido, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-md-4">
                        @Html.LabelFor(model => model.vendidoPor, "Vendio por", new { @for = "vendidoPor", @class = "control-label" })
                        @Html.TextBoxFor(model => model.vendidoPor, new { @class = "form-control", style = "max-width:100%" })
                        @Html.ValidationMessageFor(model => model.vendidoPor, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>            
            <br />

            <div class="row">
                <div class="form-group">
                    <div class="col-md-12">
                        @Html.LabelFor(model => model.logo, "Logo", new { @class = "control-label" })
                        @Html.TextBoxFor(m => m.File, new { type = "file", @class = "btn btn-primary", title = "Seleccione el logo", accept = "image/*" })
                    </div>
                </div>
            </div>
            <div id="uploaded" class="row">
            </div>
        </div>        
    </div>

    <br />
    <div class="row">
        <div class="col-md-12">
            <div class="form-group">
                <input type='submit' id='upload-files' value=' Guardar ' class="btn btn-info" />
                | @Html.ActionLink("Volver al inicio", "Index", "Home")
            </div>
        </div>
    </div>


}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

<!-- plupload and all it's runtimes and the jQuery queue widget (attachments) -->
@*<script src="http://ajax.googleapis.com/ajax/libs/jquery/1.7.1/jquery.min.js"></script>*@
<script src="http://google-code-prettify.googlecode.com/svn/trunk/src/prettify.js"></script>


<script>
    //<![CDATA[
    $(function () {
        $.fn.bootstrapFileInput = function () {
            this.each(function (i, elem) {
                var $elem = $(elem); if (typeof $elem.attr('data-bfi-disabled') != 'undefined') { return; }
                var buttonWord = 'Browse'; if (typeof $elem.attr('title') != 'undefined') { buttonWord = $elem.attr('title'); }
                var className = ''; if (!!$elem.attr('class')) { className = ' ' + $elem.attr('class'); }
                $elem.wrap('<a class="file-input-wrapper btn btn-default ' + className + '"></a>').parent().prepend(buttonWord);
            }).promise().done(function () {
                $('.file-input-wrapper').mousemove(function (cursor) { var input, wrapper, wrapperX, wrapperY, inputWidth, inputHeight, cursorX, cursorY; wrapper = $(this); input = wrapper.find("input"); wrapperX = wrapper.offset().left; wrapperY = wrapper.offset().top; inputWidth = input.width(); inputHeight = input.height(); cursorX = cursor.pageX; cursorY = cursor.pageY; moveInputX = cursorX - wrapperX - inputWidth + 20; moveInputY = cursorY - wrapperY - (inputHeight / 2); input.css({ left: moveInputX, top: moveInputY }); }); $('body').on('change', '.file-input-wrapper input[type=file]', function () {
                    var fileName; fileName = $(this).val(); $(this).parent().next('.file-input-name').remove(); if (!!$(this).prop('files') && $(this).prop('files').length > 1) { fileName = $(this)[0].files.length + ' files'; }
                    else { fileName = fileName.substring(fileName.lastIndexOf('\\') + 1, fileName.length); }
                    $(this).parent().after('<span class="file-input-name">' + fileName + '</span>');
                });
            });
        }; var cssHtml = '<style>' + '.file-input-wrapper { overflow: hidden; position: relative; cursor: pointer; z-index: 1; }' + '.file-input-wrapper input[type=file], .file-input-wrapper input[type=file]:focus, .file-input-wrapper input[type=file]:hover { position: absolute; top: 0; left: 0; cursor: pointer; opacity: 0; filter: alpha(opacity=0); z-index: 99; outline: 0; }' + '.file-input-name { margin-left: 8px; }' + '</style>'; $('link[rel=stylesheet]').eq(0).before(cssHtml);
    });
    //]]></script>
<script>$(document).ready(function () { $('input[type=file]').bootstrapFileInput(); });</script>

@*@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Customer</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.nombre, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.nombre, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.nombre, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.logo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.logo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.logo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.mostrarTodo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.mostrarTodo)
                    @Html.ValidationMessageFor(model => model.mostrarTodo, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ganadoresPartido, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ganadoresPartido, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ganadoresPartido, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.vendidoPor, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.vendidoPor, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.vendidoPor, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>*@
